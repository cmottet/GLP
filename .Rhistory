output
?facet_grid
variable <- names(sample)
nVar <- ncol(sample)
allPairs <- combn(1:nVar,2)
dataPlot <- NULL
for (i in 1:ncol(allPairs))
{
newData <- data.frame(xName = names(sample)[allPairs[1,i]],
yName = names(sample)[allPairs[2,i]],
x = sample[,allPairs[1,i]],
y = sample[,allPairs[2,i]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_grid(yName ~ xName, scales = "free") +
labs(x = "", y = "")
if ("rectangular" %in% names(CI))
{
dataPlotRect <- NULL
for (i in 1:ncol(allPairs))
{
CIrect <- expand.grid(x = CI$rectangular[,allPairs[1,i]] ,
y = CI$rectangular[,allPairs[2,i]])[c(1,3,4,2),]
newData <- data.frame(xName = names(sample)[allPairs[1,i]],
yName = names(sample)[allPairs[2,i]],
CIrect)
dataPlotRect <- rbind(dataPlotRect, newData)
}
plot <- plot + geom_polygon(data = dataPlotRect, aes(x = x, y = y), colour = "red", fill = NA)
}
if ("ellipsoid" %in% names(CI))
{
dataPlotEllipse <- NULL
segments <- 100
for (i in 1:ncol(allPairs))
{
pairNames <- names(sample)[allPairs[,i]]
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
center <- CI$ellipsoid$mu[pairNames]
angles <- (0:segments) * 2 * pi/segments
unit.circle <- cbind(cos(angles), sin(angles))
CIellipse <- data.frame(t(center + radius * t(unit.circle %*% chol_decomp)))
names(CIellipse) <- c("x", "y")
newData <- data.frame(xName = names(sample)[allPairs[1,i]],
yName = names(sample)[allPairs[2,i]],
CIellipse)
dataPlotEllipse <- rbind(dataPlotEllipse, newData)
}
plot <- plot + geom_path(data = dataPlotEllipse, aes(x = x, y = y), colour = "green")
}
output <- plot
output
?facet_grid
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_grid(. ~ yName + xName, scales = "free") +
labs(x = "", y = "")
plot
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_grid(yName ~  + xName, scales = "free") +
labs(x = "", y = "")
plot
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_grid(yName ~   xName, scales = "free") +
labs(x = "", y = "")
plot
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrapyName ~   xName, scales = "free") +
labs(x = "", y = "")
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrapy(yName ~   xName, scales = "free") +
labs(x = "", y = "")
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrap(yName ~   xName, scales = "free") +
labs(x = "", y = "")
plot
ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrap(yName ~   xName, scales = "free", switch = "y") +
labs(x = "", y = "")
?facet_gris
?facet_grid
?facet_wrap
ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrap(yName ~   xName, scales = "free", dir = "v") +
labs(x = "", y = "")
?combn
?pern
?permn
?perm
install.packages("gtools")
permutations(3,r = 2)
library(gtools)
permutations(3,r = 2)
permutations(3,r = 2, repeats.allowed = T)
permutations(3,r = 2, repeats.allowed = T, x =  names(sample))
permutations(3,r = 2, repeats.allowed = T, v =  names(sample))
allPairs <-  permutations(nVar,r = 2, repeats.allowed = T, v =  names(sample))
allPairs
variable <- names(sample)
nVar <- ncol(sample)
allPairs <- combn(1:nVar,2)
allPairs <-  permutations(nVar,r = 2, repeats.allowed = T, v =  names(sample))
dataPlot <- NULL
for (i in 1:ncol(allPairs))
{
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
x = sample[,allPairs[i,1]],
y = sample[,allPairs[i,2]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrap(yName ~   xName, scales = "free", dir = "v") +
labs(x = "", y = "")
geom_point
plot
variable <- names(sample)
nVar <- ncol(sample)
allPairs <- combn(1:nVar,2)
allPairs <-  permutations(nVar,r = 2, repeats.allowed = T, v =  names(sample))
dataPlot <- NULL
for (i in 1:nrow(allPairs))
{
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
x = sample[,allPairs[i,1]],
y = sample[,allPairs[i,2]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_wrap(yName ~   xName, scales = "free", dir = "v") +
labs(x = "", y = "")
plot
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_grid(yName ~ xName, scales = "free", dir = "v") +
labs(x = "", y = "")
plot <- ggplot(dataPlot,aes(x = x, y = y) ) +
geom_point() +
facet_grid(yName ~ xName, scales = "free") +
labs(x = "", y = "")
plot
if ("rectangular" %in% names(CI))
{
dataPlotRect <- NULL
for (i in 1:ncol(allPairs))
{
CIrect <- expand.grid(x = CI$rectangular[,allPairs[i,1]] ,
y = CI$rectangular[,allPairs[i,2]])[c(1,3,4,2),]
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIrect)
dataPlotRect <- rbind(dataPlotRect, newData)
}
plot <- plot + geom_polygon(data = dataPlotRect, aes(x = x, y = y), colour = "red", fill = NA)
}
plot
if ("rectangular" %in% names(CI))
{
dataPlotRect <- NULL
for (i in 1:nrow(allPairs))
{
CIrect <- expand.grid(x = CI$rectangular[,allPairs[i,1]] ,
y = CI$rectangular[,allPairs[i,2]])[c(1,3,4,2),]
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIrect)
dataPlotRect <- rbind(dataPlotRect, newData)
}
plot <- plot + geom_polygon(data = dataPlotRect, aes(x = x, y = y), colour = "red", fill = NA)
}
plot
if ("ellipsoid" %in% names(CI))
{
dataPlotEllipse <- NULL
segments <- 100
for (i in 1:nrow(allPairs))
{
pairNames <- allPairs[i,]
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
center <- CI$ellipsoid$mu[pairNames]
angles <- (0:segments) * 2 * pi/segments
unit.circle <- cbind(cos(angles), sin(angles))
CIellipse <- data.frame(t(center + radius * t(unit.circle %*% chol_decomp)))
names(CIellipse) <- c("x", "y")
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIellipse)
dataPlotEllipse <- rbind(dataPlotEllipse, newData)
}
plot <- plot + geom_path(data = dataPlotEllipse, aes(x = x, y = y), colour = "green")
}
i
pairNames <- allPairs[i,]
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
pairNames
CI$ellipsoid$Sigma[pairNames,pairNames ]
plot + geom_hist()
plot + geom_histogram()
head(dataPlot)
if ("ellipsoid" %in% names(CI))
{
dataPlotEllipse <- NULL
segments <- 100
for (i in 1:nrow(allPairs))
{
pairNames <- allPairs[i,]
if (pairNames[1]!= pairNames[2]){
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
center <- CI$ellipsoid$mu[pairNames]
angles <- (0:segments) * 2 * pi/segments
unit.circle <- cbind(cos(angles), sin(angles))
CIellipse <- data.frame(t(center + radius * t(unit.circle %*% chol_decomp)))
names(CIellipse) <- c("x", "y")
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIellipse)
dataPlotEllipse <- rbind(dataPlotEllipse, newData)
}
}
plot <- plot + geom_path(data = dataPlotEllipse, aes(x = x, y = y), colour = "green")
}
plot
head(pairNames)
allPairs
pairNames[,1] == pairNames[,2]
allPairs[,1] == allPairs[,2]
dplyr::slice( dataPlot,which(allPairs[,1] == allPairs[,2]))
which(allPairs[,1] == allPairs[,2])
which(dataPlot$xName == dataPlot$yName)
dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
dataPlotHist
plot + geom_histogram(data = dataPlotHist, aes(x = x))
ggplot() + geom_histogram(data = dataPlotHist, aes(x = x))
plot <- ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_grid(yName ~ xName, scales = "free") +
labs(x = "", y = "")
plot
dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
output <- plot + geom_histogram(data = dataPlotHist, aes(x = x))
output
plot <- ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_wrap(yName ~ xName, scales = "free") +
labs(x = "", y = "")
dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
output <- plot + geom_histogram(data = dataPlotHist, aes(x = x))
output
variable <- names(sample)
nVar <- ncol(sample)
allPairs <- combn(1:nVar,2)
allPairs <-  permutations(nVar,r = 2, repeats.allowed = F, v =  names(sample))
dataPlot <- NULL
for (i in 1:nrow(allPairs))
{
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
x = sample[,allPairs[i,1]],
y = sample[,allPairs[i,2]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_wrap(yName ~ xName, scales = "free") +
labs(x = "", y = "")
#dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
#output <- plot + geom_histogram(data = dataPlotHist, aes(x = x))
if ("rectangular" %in% names(CI))
{
dataPlotRect <- NULL
for (i in 1:nrow(allPairs))
{
CIrect <- expand.grid(x = CI$rectangular[,allPairs[i,1]] ,
y = CI$rectangular[,allPairs[i,2]])[c(1,3,4,2),]
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIrect)
dataPlotRect <- rbind(dataPlotRect, newData)
}
plot <- plot + geom_polygon(data = dataPlotRect, aes(x = x, y = y), colour = "red", fill = NA)
}
if ("ellipsoid" %in% names(CI))
{
dataPlotEllipse <- NULL
segments <- 100
for (i in 1:nrow(allPairs))
{
pairNames <- allPairs[i,]
if (pairNames[1]!= pairNames[2]){
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
center <- CI$ellipsoid$mu[pairNames]
angles <- (0:segments) * 2 * pi/segments
unit.circle <- cbind(cos(angles), sin(angles))
CIellipse <- data.frame(t(center + radius * t(unit.circle %*% chol_decomp)))
names(CIellipse) <- c("x", "y")
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIellipse)
dataPlotEllipse <- rbind(dataPlotEllipse, newData)
}
}
plot <- plot + geom_path(data = dataPlotEllipse, aes(x = x, y = y), colour = "green")
}
plot
ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_grid(yName ~ xName, scales = "free") +
labs(x = "", y = "")
variable <- names(sample)
nVar <- ncol(sample)
allPairs <- combn(1:nVar,2)
allPairs <-  permutations(nVar,r = 2, repeats.allowed = F, v =  names(sample))
dataPlot <- NULL
for (i in 1:nrow(allPairs))
{
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
x = sample[,allPairs[i,1]],
y = sample[,allPairs[i,2]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_grid(yName ~ xName, scales = "free") +
labs(x = "", y = "")
#dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
#output <- plot + geom_histogram(data = dataPlotHist, aes(x = x))
if ("rectangular" %in% names(CI))
{
dataPlotRect <- NULL
for (i in 1:nrow(allPairs))
{
CIrect <- expand.grid(x = CI$rectangular[,allPairs[i,1]] ,
y = CI$rectangular[,allPairs[i,2]])[c(1,3,4,2),]
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIrect)
dataPlotRect <- rbind(dataPlotRect, newData)
}
plot <- plot + geom_polygon(data = dataPlotRect, aes(x = x, y = y), colour = "red", fill = NA)
}
if ("ellipsoid" %in% names(CI))
{
dataPlotEllipse <- NULL
segments <- 100
for (i in 1:nrow(allPairs))
{
pairNames <- allPairs[i,]
if (pairNames[1]!= pairNames[2]){
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
center <- CI$ellipsoid$mu[pairNames]
angles <- (0:segments) * 2 * pi/segments
unit.circle <- cbind(cos(angles), sin(angles))
CIellipse <- data.frame(t(center + radius * t(unit.circle %*% chol_decomp)))
names(CIellipse) <- c("x", "y")
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIellipse)
dataPlotEllipse <- rbind(dataPlotEllipse, newData)
}
}
plot <- plot + geom_path(data = dataPlotEllipse, aes(x = x, y = y), colour = "green")
}
plot
variable <- names(sample)
nVar <- ncol(sample)
allPairs <- combn(1:nVar,2)
allPairs <-  permutations(nVar,r = 2, repeats.allowed = F, v =  names(sample))
dataPlot <- NULL
for (i in 1:nrow(allPairs))
{
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
x = sample[,allPairs[i,1]],
y = sample[,allPairs[i,2]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_grid(yName ~ xName, scales = "free") +
labs(x = "", y = "")
#dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
#output <- plot + geom_histogram(data = dataPlotHist, aes(x = x))
if ("rectangular" %in% names(CI))
{
dataPlotRect <- NULL
for (i in 1:nrow(allPairs))
{
CIrect <- expand.grid(x = CI$rectangular[,allPairs[i,1]] ,
y = CI$rectangular[,allPairs[i,2]])[c(1,3,4,2),]
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIrect)
dataPlotRect <- rbind(dataPlotRect, newData)
}
plot <- plot + geom_polygon(data = dataPlotRect, aes(x = x, y = y), colour = "red", fill = NA)
}
if ("ellipsoid" %in% names(CI))
{
dataPlotEllipse <- NULL
segments <- 100
for (i in 1:nrow(allPairs))
{
pairNames <- allPairs[i,]
if (pairNames[1]!= pairNames[2]){
Sigma <- CI$ellipsoid$Sigma[pairNames,pairNames ]
chol_decomp <- chol(Sigma)
radius <- CI$ellipsoid$radius
center <- CI$ellipsoid$mu[pairNames]
angles <- (0:segments) * 2 * pi/segments
unit.circle <- cbind(cos(angles), sin(angles))
CIellipse <- data.frame(t(center + radius * t(unit.circle %*% chol_decomp)))
names(CIellipse) <- c("x", "y")
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
CIellipse)
dataPlotEllipse <- rbind(dataPlotEllipse, newData)
}
}
plot <- plot + geom_path(data = dataPlotEllipse, aes(x = x, y = y), colour = "green")
}
output <- plot
devtools::document()
set.seed(100)
n <- 300 ;  mu <- c(1,2,3) ; Sigma <- matrix(c(6,0,0,0,1,1,0,1,1),ncol =3) ; alpha = 0.05
sample <- MASS::mvrnorm(n,mu,Sigma) %>% as.data.frame
CIellipsoid <- list(mu = colMeans(sample, na.rm = TRUE), Sigma = cov(sample, use = "complete.ob"), radius = sqrt(qchisq(1-alpha/2, df = 2)))
CIrectangular <- apply(sample, 2, quantile, probs = c(alpha/2,1-alpha/2))
CI <- list(ellipsoid = CIellipsoid, rectangular = CIrectangular)
plotCI(sample,CI)
n <- 300 ;  mu <- c(1,2) ; Sigma <- matrix(c(6,1,1,1),ncol =2) ; alpha = 0.05
sample <- MASS::mvrnorm(n,mu,Sigma) %>% as.data.frame
CIellipsoid <- list(mu = colMeans(sample, na.rm = TRUE), Sigma = cov(sample, use = "complete.ob"), radius = sqrt(qchisq(1-alpha/2, df = 2)))
CIrectangular <- apply(sample, 2, quantile, probs = c(alpha/2,1-alpha/2))
CI <- list(ellipsoid = CIellipsoid, rectangular = CIrectangular)
plotCI(sample,CI)
n <- 300 ;  mu <- c(1,2,3) ; Sigma <- matrix(c(6,0,0,0,1,1,0,1,1),ncol =3) ; alpha = 0.05
sample <- MASS::mvrnorm(n,mu,Sigma) %>% as.data.frame
CIellipsoid <- list(mu = colMeans(sample, na.rm = TRUE), Sigma = cov(sample, use = "complete.ob"), radius = sqrt(qchisq(1-alpha/2, df = 2)))
CIrectangular <- apply(sample, 2, quantile, probs = c(alpha/2,1-alpha/2))
CI <- list(ellipsoid = CIellipsoid, rectangular = CIrectangular)
plotCI(sample,CI)
combinations(nVar,r = 2, repeats.allowed = F, v =  names(sample))
variable <- names(sample)
devtools::document()
library(GLP)
library(GLP)
devtools::document()
set.seed(100)
n <- 300 ;  mu <- c(1,2,3) ; Sigma <- matrix(c(6,0,0,0,1,1,0,1,1),ncol =3) ; alpha = 0.05
sample <- MASS::mvrnorm(n,mu,Sigma) %>% as.data.frame
library(GLP)
CIellipsoid <- list(mu = colMeans(sample, na.rm = TRUE), Sigma = cov(sample, use = "complete.ob"), radius = sqrt(qchisq(1-alpha/2, df = 2)))
CIrectangular <- apply(sample, 2, quantile, probs = c(alpha/2,1-alpha/2))
CI <- list(ellipsoid = CIellipsoid, rectangular = CIrectangular)
plotCI(sample,CI)
n <- 300 ;  mu <- c(1,2) ; Sigma <- matrix(c(6,1,1,1),ncol =2) ; alpha = 0.05
sample <- MASS::mvrnorm(n,mu,Sigma) %>% as.data.frame
CIellipsoid <- list(mu = colMeans(sample, na.rm = TRUE), Sigma = cov(sample, use = "complete.ob"), radius = sqrt(qchisq(1-alpha/2, df = 2)))
CIrectangular <- apply(sample, 2, quantile, probs = c(alpha/2,1-alpha/2))
CI <- list(ellipsoid = CIellipsoid, rectangular = CIrectangular)
plotCI(sample,CI)
variable <- names(sample)
nVar <- ncol(sample)
allPairs <-  combinations(nVar,r = 2, repeats.allowed = F, v =  names(sample))
dataPlot <- NULL
for (i in 1:nrow(allPairs))
{
newData <- data.frame(xName = allPairs[i,1],
yName = allPairs[i,2],
x = sample[,allPairs[i,1]],
y = sample[,allPairs[i,2]])
dataPlot <- rbind(dataPlot, newData)
}
plot <- ggplot(dataPlot) +
geom_point(aes(x = x, y = y) ) +
facet_wrap(yName ~ xName, scales = "free") +
labs(x = "", y = "")
#dataPlotHist <- dplyr::slice( dataPlot,which(dataPlot$xName == dataPlot$yName))
plot
set.seed(100)
n <- 300 ;  mu <- c(1,2,3) ; Sigma <- matrix(c(6,0,0,0,1,1,0,1,1),ncol =3) ; alpha = 0.05
sample <- MASS::mvrnorm(n,mu,Sigma) %>% as.data.frame
CIellipsoid <- list(mu = colMeans(sample, na.rm = TRUE), Sigma = cov(sample, use = "complete.ob"), radius = sqrt(qchisq(1-alpha/2, df = 2)))
CIrectangular <- apply(sample, 2, quantile, probs = c(alpha/2,1-alpha/2))
CI <- list(ellipsoid = CIellipsoid, rectangular = CIrectangular)
plotCI(sample,CI)
